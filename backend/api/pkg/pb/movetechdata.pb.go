// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.3
// source: pkg/pb/movetechdata.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SortOption int32

const (
	SortOption_ATOZ                 SortOption = 0
	SortOption_ZTOA                 SortOption = 1
	SortOption_PRICE_HIGH_TO_LOW    SortOption = 2
	SortOption_PRICE_LOW_TO_HIGH    SortOption = 3
	SortOption_QUANTITY_HIGH_TO_LOW SortOption = 4
	SortOption_QUANTITY_LOW_TO_HIGH SortOption = 5
)

// Enum value maps for SortOption.
var (
	SortOption_name = map[int32]string{
		0: "ATOZ",
		1: "ZTOA",
		2: "PRICE_HIGH_TO_LOW",
		3: "PRICE_LOW_TO_HIGH",
		4: "QUANTITY_HIGH_TO_LOW",
		5: "QUANTITY_LOW_TO_HIGH",
	}
	SortOption_value = map[string]int32{
		"ATOZ":                 0,
		"ZTOA":                 1,
		"PRICE_HIGH_TO_LOW":    2,
		"PRICE_LOW_TO_HIGH":    3,
		"QUANTITY_HIGH_TO_LOW": 4,
		"QUANTITY_LOW_TO_HIGH": 5,
	}
)

func (x SortOption) Enum() *SortOption {
	p := new(SortOption)
	*p = x
	return p
}

func (x SortOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortOption) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_pb_movetechdata_proto_enumTypes[0].Descriptor()
}

func (SortOption) Type() protoreflect.EnumType {
	return &file_pkg_pb_movetechdata_proto_enumTypes[0]
}

func (x SortOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortOption.Descriptor instead.
func (SortOption) EnumDescriptor() ([]byte, []int) {
	return file_pkg_pb_movetechdata_proto_rawDescGZIP(), []int{0}
}

type ProductData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId        string  `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	ImgName          string  `protobuf:"bytes,2,opt,name=imgName,proto3" json:"imgName,omitempty"`
	Img              string  `protobuf:"bytes,3,opt,name=img,proto3" json:"img,omitempty"`
	Discount         float64 `protobuf:"fixed64,4,opt,name=discount,proto3" json:"discount,omitempty"`
	SupplierPrice    float64 `protobuf:"fixed64,5,opt,name=supplierPrice,proto3" json:"supplierPrice,omitempty"`
	OriginalPrice    float64 `protobuf:"fixed64,6,opt,name=originalPrice,proto3" json:"originalPrice,omitempty"`
	DiscountedPrice  float64 `protobuf:"fixed64,7,opt,name=discountedPrice,proto3" json:"discountedPrice,omitempty"`
	Description1     string  `protobuf:"bytes,8,opt,name=description1,proto3" json:"description1,omitempty"`
	Description2     string  `protobuf:"bytes,9,opt,name=description2,proto3" json:"description2,omitempty"`
	OriginalQuantity float64 `protobuf:"fixed64,10,opt,name=originalQuantity,proto3" json:"originalQuantity,omitempty"`
	CurrentQuantity  float64 `protobuf:"fixed64,11,opt,name=currentQuantity,proto3" json:"currentQuantity,omitempty"`
	ProductStatus    string  `protobuf:"bytes,12,opt,name=productStatus,proto3" json:"productStatus,omitempty"`
	ProductSold      float64 `protobuf:"fixed64,13,opt,name=productSold,proto3" json:"productSold,omitempty"`
	ProductFreebies  string  `protobuf:"bytes,14,opt,name=productFreebies,proto3" json:"productFreebies,omitempty"`
	CreatedBy        string  `protobuf:"bytes,15,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	CreatedAt        int64   `protobuf:"varint,16,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedBy        string  `protobuf:"bytes,17,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	UpdatedAt        int64   `protobuf:"varint,18,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *ProductData) Reset() {
	*x = ProductData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_movetechdata_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductData) ProtoMessage() {}

func (x *ProductData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_movetechdata_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductData.ProtoReflect.Descriptor instead.
func (*ProductData) Descriptor() ([]byte, []int) {
	return file_pkg_pb_movetechdata_proto_rawDescGZIP(), []int{0}
}

func (x *ProductData) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ProductData) GetImgName() string {
	if x != nil {
		return x.ImgName
	}
	return ""
}

func (x *ProductData) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *ProductData) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *ProductData) GetSupplierPrice() float64 {
	if x != nil {
		return x.SupplierPrice
	}
	return 0
}

func (x *ProductData) GetOriginalPrice() float64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *ProductData) GetDiscountedPrice() float64 {
	if x != nil {
		return x.DiscountedPrice
	}
	return 0
}

func (x *ProductData) GetDescription1() string {
	if x != nil {
		return x.Description1
	}
	return ""
}

func (x *ProductData) GetDescription2() string {
	if x != nil {
		return x.Description2
	}
	return ""
}

func (x *ProductData) GetOriginalQuantity() float64 {
	if x != nil {
		return x.OriginalQuantity
	}
	return 0
}

func (x *ProductData) GetCurrentQuantity() float64 {
	if x != nil {
		return x.CurrentQuantity
	}
	return 0
}

func (x *ProductData) GetProductStatus() string {
	if x != nil {
		return x.ProductStatus
	}
	return ""
}

func (x *ProductData) GetProductSold() float64 {
	if x != nil {
		return x.ProductSold
	}
	return 0
}

func (x *ProductData) GetProductFreebies() string {
	if x != nil {
		return x.ProductFreebies
	}
	return ""
}

func (x *ProductData) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ProductData) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ProductData) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *ProductData) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type SaveProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImgName          string  `protobuf:"bytes,1,opt,name=imgName,proto3" json:"imgName,omitempty"`
	Img              string  `protobuf:"bytes,2,opt,name=img,proto3" json:"img,omitempty"`
	Discount         float64 `protobuf:"fixed64,3,opt,name=discount,proto3" json:"discount,omitempty"`
	SupplierPrice    float64 `protobuf:"fixed64,4,opt,name=supplierPrice,proto3" json:"supplierPrice,omitempty"`
	OriginalPrice    float64 `protobuf:"fixed64,5,opt,name=originalPrice,proto3" json:"originalPrice,omitempty"`
	DiscountedPrice  float64 `protobuf:"fixed64,6,opt,name=discountedPrice,proto3" json:"discountedPrice,omitempty"`
	Description1     string  `protobuf:"bytes,7,opt,name=description1,proto3" json:"description1,omitempty"`
	Description2     string  `protobuf:"bytes,8,opt,name=description2,proto3" json:"description2,omitempty"`
	OriginalQuantity float64 `protobuf:"fixed64,9,opt,name=originalQuantity,proto3" json:"originalQuantity,omitempty"`
	CurrentQuantity  float64 `protobuf:"fixed64,10,opt,name=currentQuantity,proto3" json:"currentQuantity,omitempty"`
	ProductStatus    string  `protobuf:"bytes,11,opt,name=productStatus,proto3" json:"productStatus,omitempty"`
	ProductSold      float64 `protobuf:"fixed64,12,opt,name=productSold,proto3" json:"productSold,omitempty"`
	ProductFreebies  string  `protobuf:"bytes,13,opt,name=productFreebies,proto3" json:"productFreebies,omitempty"`
}

func (x *SaveProductRequest) Reset() {
	*x = SaveProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_movetechdata_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveProductRequest) ProtoMessage() {}

func (x *SaveProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_movetechdata_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveProductRequest.ProtoReflect.Descriptor instead.
func (*SaveProductRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_movetechdata_proto_rawDescGZIP(), []int{1}
}

func (x *SaveProductRequest) GetImgName() string {
	if x != nil {
		return x.ImgName
	}
	return ""
}

func (x *SaveProductRequest) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *SaveProductRequest) GetDiscount() float64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *SaveProductRequest) GetSupplierPrice() float64 {
	if x != nil {
		return x.SupplierPrice
	}
	return 0
}

func (x *SaveProductRequest) GetOriginalPrice() float64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *SaveProductRequest) GetDiscountedPrice() float64 {
	if x != nil {
		return x.DiscountedPrice
	}
	return 0
}

func (x *SaveProductRequest) GetDescription1() string {
	if x != nil {
		return x.Description1
	}
	return ""
}

func (x *SaveProductRequest) GetDescription2() string {
	if x != nil {
		return x.Description2
	}
	return ""
}

func (x *SaveProductRequest) GetOriginalQuantity() float64 {
	if x != nil {
		return x.OriginalQuantity
	}
	return 0
}

func (x *SaveProductRequest) GetCurrentQuantity() float64 {
	if x != nil {
		return x.CurrentQuantity
	}
	return 0
}

func (x *SaveProductRequest) GetProductStatus() string {
	if x != nil {
		return x.ProductStatus
	}
	return ""
}

func (x *SaveProductRequest) GetProductSold() float64 {
	if x != nil {
		return x.ProductSold
	}
	return 0
}

func (x *SaveProductRequest) GetProductFreebies() string {
	if x != nil {
		return x.ProductFreebies
	}
	return ""
}

type SaveProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductData *ProductData `protobuf:"bytes,1,opt,name=productData,proto3" json:"productData,omitempty"`
}

func (x *SaveProductResponse) Reset() {
	*x = SaveProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_movetechdata_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveProductResponse) ProtoMessage() {}

func (x *SaveProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_movetechdata_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveProductResponse.ProtoReflect.Descriptor instead.
func (*SaveProductResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_movetechdata_proto_rawDescGZIP(), []int{2}
}

func (x *SaveProductResponse) GetProductData() *ProductData {
	if x != nil {
		return x.ProductData
	}
	return nil
}

type FreebiesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreebiesId               string  `protobuf:"bytes,1,opt,name=freebiesId,proto3" json:"freebiesId,omitempty"`
	FreebiesName             string  `protobuf:"bytes,2,opt,name=freebiesName,proto3" json:"freebiesName,omitempty"`
	FreebiesImg              []byte  `protobuf:"bytes,3,opt,name=freebiesImg,proto3" json:"freebiesImg,omitempty"`
	FreebiesStorePrice       float64 `protobuf:"fixed64,4,opt,name=freebiesStorePrice,proto3" json:"freebiesStorePrice,omitempty"`
	FreebiesOriginalQuantity float64 `protobuf:"fixed64,5,opt,name=freebiesOriginalQuantity,proto3" json:"freebiesOriginalQuantity,omitempty"`
	FreebiesCurrentQuantity  float64 `protobuf:"fixed64,6,opt,name=freebiesCurrentQuantity,proto3" json:"freebiesCurrentQuantity,omitempty"`
	FreebiesStatus           string  `protobuf:"bytes,7,opt,name=freebiesStatus,proto3" json:"freebiesStatus,omitempty"`
	CreatedBy                string  `protobuf:"bytes,8,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	CreatedAt                int64   `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedBy                string  `protobuf:"bytes,10,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	UpdatedAt                int64   `protobuf:"varint,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *FreebiesData) Reset() {
	*x = FreebiesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_movetechdata_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreebiesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreebiesData) ProtoMessage() {}

func (x *FreebiesData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_movetechdata_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreebiesData.ProtoReflect.Descriptor instead.
func (*FreebiesData) Descriptor() ([]byte, []int) {
	return file_pkg_pb_movetechdata_proto_rawDescGZIP(), []int{3}
}

func (x *FreebiesData) GetFreebiesId() string {
	if x != nil {
		return x.FreebiesId
	}
	return ""
}

func (x *FreebiesData) GetFreebiesName() string {
	if x != nil {
		return x.FreebiesName
	}
	return ""
}

func (x *FreebiesData) GetFreebiesImg() []byte {
	if x != nil {
		return x.FreebiesImg
	}
	return nil
}

func (x *FreebiesData) GetFreebiesStorePrice() float64 {
	if x != nil {
		return x.FreebiesStorePrice
	}
	return 0
}

func (x *FreebiesData) GetFreebiesOriginalQuantity() float64 {
	if x != nil {
		return x.FreebiesOriginalQuantity
	}
	return 0
}

func (x *FreebiesData) GetFreebiesCurrentQuantity() float64 {
	if x != nil {
		return x.FreebiesCurrentQuantity
	}
	return 0
}

func (x *FreebiesData) GetFreebiesStatus() string {
	if x != nil {
		return x.FreebiesStatus
	}
	return ""
}

func (x *FreebiesData) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *FreebiesData) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *FreebiesData) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *FreebiesData) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type SaveFreebiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreebiesName             string  `protobuf:"bytes,1,opt,name=freebiesName,proto3" json:"freebiesName,omitempty"`
	FreebiesImg              []byte  `protobuf:"bytes,2,opt,name=freebiesImg,proto3" json:"freebiesImg,omitempty"`
	FreebiesStorePrice       float64 `protobuf:"fixed64,3,opt,name=freebiesStorePrice,proto3" json:"freebiesStorePrice,omitempty"`
	FreebiesOriginalQuantity float64 `protobuf:"fixed64,4,opt,name=freebiesOriginalQuantity,proto3" json:"freebiesOriginalQuantity,omitempty"`
	FreebiesCurrentQuantity  float64 `protobuf:"fixed64,5,opt,name=freebiesCurrentQuantity,proto3" json:"freebiesCurrentQuantity,omitempty"`
	FreebiesStatus           string  `protobuf:"bytes,6,opt,name=freebiesStatus,proto3" json:"freebiesStatus,omitempty"`
}

func (x *SaveFreebiesRequest) Reset() {
	*x = SaveFreebiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_movetechdata_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveFreebiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveFreebiesRequest) ProtoMessage() {}

func (x *SaveFreebiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_movetechdata_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveFreebiesRequest.ProtoReflect.Descriptor instead.
func (*SaveFreebiesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_movetechdata_proto_rawDescGZIP(), []int{4}
}

func (x *SaveFreebiesRequest) GetFreebiesName() string {
	if x != nil {
		return x.FreebiesName
	}
	return ""
}

func (x *SaveFreebiesRequest) GetFreebiesImg() []byte {
	if x != nil {
		return x.FreebiesImg
	}
	return nil
}

func (x *SaveFreebiesRequest) GetFreebiesStorePrice() float64 {
	if x != nil {
		return x.FreebiesStorePrice
	}
	return 0
}

func (x *SaveFreebiesRequest) GetFreebiesOriginalQuantity() float64 {
	if x != nil {
		return x.FreebiesOriginalQuantity
	}
	return 0
}

func (x *SaveFreebiesRequest) GetFreebiesCurrentQuantity() float64 {
	if x != nil {
		return x.FreebiesCurrentQuantity
	}
	return 0
}

func (x *SaveFreebiesRequest) GetFreebiesStatus() string {
	if x != nil {
		return x.FreebiesStatus
	}
	return ""
}

type SaveFreebiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreebiesData *FreebiesData `protobuf:"bytes,1,opt,name=freebiesData,proto3" json:"freebiesData,omitempty"`
}

func (x *SaveFreebiesResponse) Reset() {
	*x = SaveFreebiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_movetechdata_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveFreebiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveFreebiesResponse) ProtoMessage() {}

func (x *SaveFreebiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_movetechdata_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveFreebiesResponse.ProtoReflect.Descriptor instead.
func (*SaveFreebiesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_movetechdata_proto_rawDescGZIP(), []int{5}
}

func (x *SaveFreebiesResponse) GetFreebiesData() *FreebiesData {
	if x != nil {
		return x.FreebiesData
	}
	return nil
}

type GetAllFreebiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Search     string `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`
	SortOption string `protobuf:"bytes,2,opt,name=sortOption,proto3" json:"sortOption,omitempty"`
}

func (x *GetAllFreebiesRequest) Reset() {
	*x = GetAllFreebiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_movetechdata_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllFreebiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFreebiesRequest) ProtoMessage() {}

func (x *GetAllFreebiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_movetechdata_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFreebiesRequest.ProtoReflect.Descriptor instead.
func (*GetAllFreebiesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_movetechdata_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllFreebiesRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetAllFreebiesRequest) GetSortOption() string {
	if x != nil {
		return x.SortOption
	}
	return ""
}

type GetAllFreebiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreebiesData []*FreebiesData `protobuf:"bytes,1,rep,name=freebiesData,proto3" json:"freebiesData,omitempty"`
}

func (x *GetAllFreebiesResponse) Reset() {
	*x = GetAllFreebiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_movetechdata_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllFreebiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFreebiesResponse) ProtoMessage() {}

func (x *GetAllFreebiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_movetechdata_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFreebiesResponse.ProtoReflect.Descriptor instead.
func (*GetAllFreebiesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_movetechdata_proto_rawDescGZIP(), []int{7}
}

func (x *GetAllFreebiesResponse) GetFreebiesData() []*FreebiesData {
	if x != nil {
		return x.FreebiesData
	}
	return nil
}

type GetAllFreebiesRequestById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreebiesId string `protobuf:"bytes,1,opt,name=freebiesId,proto3" json:"freebiesId,omitempty"`
}

func (x *GetAllFreebiesRequestById) Reset() {
	*x = GetAllFreebiesRequestById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_movetechdata_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllFreebiesRequestById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFreebiesRequestById) ProtoMessage() {}

func (x *GetAllFreebiesRequestById) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_movetechdata_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFreebiesRequestById.ProtoReflect.Descriptor instead.
func (*GetAllFreebiesRequestById) Descriptor() ([]byte, []int) {
	return file_pkg_pb_movetechdata_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllFreebiesRequestById) GetFreebiesId() string {
	if x != nil {
		return x.FreebiesId
	}
	return ""
}

type GetAllFreebiesResponseById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreebiesData []*FreebiesData `protobuf:"bytes,1,rep,name=freebiesData,proto3" json:"freebiesData,omitempty"`
}

func (x *GetAllFreebiesResponseById) Reset() {
	*x = GetAllFreebiesResponseById{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_movetechdata_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllFreebiesResponseById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllFreebiesResponseById) ProtoMessage() {}

func (x *GetAllFreebiesResponseById) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_movetechdata_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllFreebiesResponseById.ProtoReflect.Descriptor instead.
func (*GetAllFreebiesResponseById) Descriptor() ([]byte, []int) {
	return file_pkg_pb_movetechdata_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllFreebiesResponseById) GetFreebiesData() []*FreebiesData {
	if x != nil {
		return x.FreebiesData
	}
	return nil
}

type UpdateFreebiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreebiesId         string  `protobuf:"bytes,1,opt,name=freebiesId,proto3" json:"freebiesId,omitempty"`
	FreebiesName       string  `protobuf:"bytes,2,opt,name=freebiesName,proto3" json:"freebiesName,omitempty"`
	FreebiesImg        []byte  `protobuf:"bytes,3,opt,name=freebiesImg,proto3" json:"freebiesImg,omitempty"`
	FreebiesStorePrice float64 `protobuf:"fixed64,4,opt,name=freebiesStorePrice,proto3" json:"freebiesStorePrice,omitempty"`
}

func (x *UpdateFreebiesRequest) Reset() {
	*x = UpdateFreebiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_movetechdata_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFreebiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFreebiesRequest) ProtoMessage() {}

func (x *UpdateFreebiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_movetechdata_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFreebiesRequest.ProtoReflect.Descriptor instead.
func (*UpdateFreebiesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_movetechdata_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateFreebiesRequest) GetFreebiesId() string {
	if x != nil {
		return x.FreebiesId
	}
	return ""
}

func (x *UpdateFreebiesRequest) GetFreebiesName() string {
	if x != nil {
		return x.FreebiesName
	}
	return ""
}

func (x *UpdateFreebiesRequest) GetFreebiesImg() []byte {
	if x != nil {
		return x.FreebiesImg
	}
	return nil
}

func (x *UpdateFreebiesRequest) GetFreebiesStorePrice() float64 {
	if x != nil {
		return x.FreebiesStorePrice
	}
	return 0
}

type UpdateFreebiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreebiesData *FreebiesData `protobuf:"bytes,1,opt,name=freebiesData,proto3" json:"freebiesData,omitempty"`
}

func (x *UpdateFreebiesResponse) Reset() {
	*x = UpdateFreebiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_movetechdata_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFreebiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFreebiesResponse) ProtoMessage() {}

func (x *UpdateFreebiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_movetechdata_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFreebiesResponse.ProtoReflect.Descriptor instead.
func (*UpdateFreebiesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_movetechdata_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateFreebiesResponse) GetFreebiesData() *FreebiesData {
	if x != nil {
		return x.FreebiesData
	}
	return nil
}

type UpdateFreebiesQuantityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreebiesId               string  `protobuf:"bytes,1,opt,name=freebiesId,proto3" json:"freebiesId,omitempty"`
	FreebiesOriginalQuantity float64 `protobuf:"fixed64,2,opt,name=freebiesOriginalQuantity,proto3" json:"freebiesOriginalQuantity,omitempty"`
	FreebiesCurrentQuantity  float64 `protobuf:"fixed64,3,opt,name=freebiesCurrentQuantity,proto3" json:"freebiesCurrentQuantity,omitempty"`
}

func (x *UpdateFreebiesQuantityRequest) Reset() {
	*x = UpdateFreebiesQuantityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_movetechdata_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFreebiesQuantityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFreebiesQuantityRequest) ProtoMessage() {}

func (x *UpdateFreebiesQuantityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_movetechdata_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFreebiesQuantityRequest.ProtoReflect.Descriptor instead.
func (*UpdateFreebiesQuantityRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_movetechdata_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateFreebiesQuantityRequest) GetFreebiesId() string {
	if x != nil {
		return x.FreebiesId
	}
	return ""
}

func (x *UpdateFreebiesQuantityRequest) GetFreebiesOriginalQuantity() float64 {
	if x != nil {
		return x.FreebiesOriginalQuantity
	}
	return 0
}

func (x *UpdateFreebiesQuantityRequest) GetFreebiesCurrentQuantity() float64 {
	if x != nil {
		return x.FreebiesCurrentQuantity
	}
	return 0
}

type UpdateFreebiesQuantityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreebiesData *FreebiesData `protobuf:"bytes,1,opt,name=freebiesData,proto3" json:"freebiesData,omitempty"`
}

func (x *UpdateFreebiesQuantityResponse) Reset() {
	*x = UpdateFreebiesQuantityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_movetechdata_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFreebiesQuantityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFreebiesQuantityResponse) ProtoMessage() {}

func (x *UpdateFreebiesQuantityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_movetechdata_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFreebiesQuantityResponse.ProtoReflect.Descriptor instead.
func (*UpdateFreebiesQuantityResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_movetechdata_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateFreebiesQuantityResponse) GetFreebiesData() *FreebiesData {
	if x != nil {
		return x.FreebiesData
	}
	return nil
}

type UpdateFreebiesStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreebiesId     string `protobuf:"bytes,1,opt,name=freebiesId,proto3" json:"freebiesId,omitempty"`
	FreebiesStatus string `protobuf:"bytes,2,opt,name=freebiesStatus,proto3" json:"freebiesStatus,omitempty"`
}

func (x *UpdateFreebiesStatusRequest) Reset() {
	*x = UpdateFreebiesStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_movetechdata_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFreebiesStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFreebiesStatusRequest) ProtoMessage() {}

func (x *UpdateFreebiesStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_movetechdata_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFreebiesStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateFreebiesStatusRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_movetechdata_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateFreebiesStatusRequest) GetFreebiesId() string {
	if x != nil {
		return x.FreebiesId
	}
	return ""
}

func (x *UpdateFreebiesStatusRequest) GetFreebiesStatus() string {
	if x != nil {
		return x.FreebiesStatus
	}
	return ""
}

type UpdateFreebiesStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreebiesData *FreebiesData `protobuf:"bytes,1,opt,name=freebiesData,proto3" json:"freebiesData,omitempty"`
}

func (x *UpdateFreebiesStatusResponse) Reset() {
	*x = UpdateFreebiesStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_movetechdata_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFreebiesStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFreebiesStatusResponse) ProtoMessage() {}

func (x *UpdateFreebiesStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_movetechdata_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFreebiesStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateFreebiesStatusResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_movetechdata_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateFreebiesStatusResponse) GetFreebiesData() *FreebiesData {
	if x != nil {
		return x.FreebiesData
	}
	return nil
}

var File_pkg_pb_movetechdata_proto protoreflect.FileDescriptor

var file_pkg_pb_movetechdata_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x6d, 0x6f, 0x76, 0x65, 0x74, 0x65, 0x63,
	0x68, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69,
	0x22, 0xf1, 0x04, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x6d, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x69, 0x6d, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69,
	0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x73,
	0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x31,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x32,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x32, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6f, 0x6c, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6f,
	0x6c, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x72, 0x65,
	0x65, 0x62, 0x69, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xe2, 0x03, 0x0a, 0x12, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x6d, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x73, 0x75, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x32, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a,
	0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6f, 0x6c, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6f, 0x6c, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69,
	0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x22, 0x49, 0x0a, 0x13, 0x53, 0x61, 0x76,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x22, 0xba, 0x03, 0x0a, 0x0c, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65,
	0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x65, 0x65, 0x62,
	0x69, 0x65, 0x73, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x65,
	0x65, 0x62, 0x69, 0x65, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x65,
	0x65, 0x62, 0x69, 0x65, 0x73, 0x49, 0x6d, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x49, 0x6d, 0x67, 0x12, 0x2e, 0x0a, 0x12, 0x66,
	0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65,
	0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x66,
	0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x66,
	0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x17, 0x66, 0x72, 0x65, 0x65, 0x62,
	0x69, 0x65, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x17, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69,
	0x65, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x72, 0x65, 0x65, 0x62,
	0x69, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xa9, 0x02, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x65,
	0x65, 0x62, 0x69, 0x65, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x49, 0x6d, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x49, 0x6d, 0x67, 0x12,
	0x2e, 0x0a, 0x12, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x66, 0x72, 0x65,
	0x65, 0x62, 0x69, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x3a, 0x0a, 0x18, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x18, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x17, 0x66,
	0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x17, 0x66, 0x72,
	0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66,
	0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4d, 0x0a,
	0x14, 0x53, 0x61, 0x76, 0x65, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c,
	0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4f, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4f, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x62,
	0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3b,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66,
	0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0c, 0x66, 0x72, 0x65,
	0x65, 0x62, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x22, 0xad, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65, 0x62,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72,
	0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72,
	0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x49, 0x6d, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x49, 0x6d, 0x67,
	0x12, 0x2e, 0x0a, 0x12, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x66, 0x72,
	0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x22, 0x4f, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x66, 0x72,
	0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x22, 0xb5, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65,
	0x62, 0x69, 0x65, 0x73, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65,
	0x73, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x18, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x38, 0x0a, 0x17, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x17, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x57, 0x0a, 0x1e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x66,
	0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x65, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65,
	0x62, 0x69, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x72, 0x65, 0x65, 0x62,
	0x69, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x55, 0x0a, 0x1c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x66, 0x72, 0x65,
	0x65, 0x62, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x2a, 0x82, 0x01, 0x0a, 0x0a, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x08, 0x0a, 0x04, 0x41, 0x54, 0x4f, 0x5a, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x5a, 0x54, 0x4f,
	0x41, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x52, 0x49, 0x43, 0x45, 0x5f, 0x48, 0x49, 0x47,
	0x48, 0x5f, 0x54, 0x4f, 0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x52,
	0x49, 0x43, 0x45, 0x5f, 0x4c, 0x4f, 0x57, 0x5f, 0x54, 0x4f, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10,
	0x03, 0x12, 0x18, 0x0a, 0x14, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x48, 0x49,
	0x47, 0x48, 0x5f, 0x54, 0x4f, 0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x51,
	0x55, 0x41, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x4c, 0x4f, 0x57, 0x5f, 0x54, 0x4f, 0x5f, 0x48,
	0x49, 0x47, 0x48, 0x10, 0x05, 0x32, 0xdd, 0x04, 0x0a, 0x19, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x65,
	0x63, 0x68, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x53, 0x61, 0x76, 0x65, 0x46,
	0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x61,
	0x76, 0x65, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x46, 0x72, 0x65, 0x65,
	0x62, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73,
	0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x72, 0x65,
	0x65, 0x62, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x72,
	0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x72,
	0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72,
	0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x63, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65, 0x62,
	0x69, 0x65, 0x73, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x22, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65,
	0x62, 0x69, 0x65, 0x73, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x72, 0x65, 0x65, 0x62, 0x69, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x65, 0x65, 0x62,
	0x69, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x65,
	0x65, 0x62, 0x69, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_pb_movetechdata_proto_rawDescOnce sync.Once
	file_pkg_pb_movetechdata_proto_rawDescData = file_pkg_pb_movetechdata_proto_rawDesc
)

func file_pkg_pb_movetechdata_proto_rawDescGZIP() []byte {
	file_pkg_pb_movetechdata_proto_rawDescOnce.Do(func() {
		file_pkg_pb_movetechdata_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_pb_movetechdata_proto_rawDescData)
	})
	return file_pkg_pb_movetechdata_proto_rawDescData
}

var file_pkg_pb_movetechdata_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_pb_movetechdata_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_pkg_pb_movetechdata_proto_goTypes = []interface{}{
	(SortOption)(0),                        // 0: api.SortOption
	(*ProductData)(nil),                    // 1: api.ProductData
	(*SaveProductRequest)(nil),             // 2: api.SaveProductRequest
	(*SaveProductResponse)(nil),            // 3: api.SaveProductResponse
	(*FreebiesData)(nil),                   // 4: api.FreebiesData
	(*SaveFreebiesRequest)(nil),            // 5: api.SaveFreebiesRequest
	(*SaveFreebiesResponse)(nil),           // 6: api.SaveFreebiesResponse
	(*GetAllFreebiesRequest)(nil),          // 7: api.GetAllFreebiesRequest
	(*GetAllFreebiesResponse)(nil),         // 8: api.GetAllFreebiesResponse
	(*GetAllFreebiesRequestById)(nil),      // 9: api.GetAllFreebiesRequestById
	(*GetAllFreebiesResponseById)(nil),     // 10: api.GetAllFreebiesResponseById
	(*UpdateFreebiesRequest)(nil),          // 11: api.UpdateFreebiesRequest
	(*UpdateFreebiesResponse)(nil),         // 12: api.UpdateFreebiesResponse
	(*UpdateFreebiesQuantityRequest)(nil),  // 13: api.UpdateFreebiesQuantityRequest
	(*UpdateFreebiesQuantityResponse)(nil), // 14: api.UpdateFreebiesQuantityResponse
	(*UpdateFreebiesStatusRequest)(nil),    // 15: api.UpdateFreebiesStatusRequest
	(*UpdateFreebiesStatusResponse)(nil),   // 16: api.UpdateFreebiesStatusResponse
}
var file_pkg_pb_movetechdata_proto_depIdxs = []int32{
	1,  // 0: api.SaveProductResponse.productData:type_name -> api.ProductData
	4,  // 1: api.SaveFreebiesResponse.freebiesData:type_name -> api.FreebiesData
	4,  // 2: api.GetAllFreebiesResponse.freebiesData:type_name -> api.FreebiesData
	4,  // 3: api.GetAllFreebiesResponseById.freebiesData:type_name -> api.FreebiesData
	4,  // 4: api.UpdateFreebiesResponse.freebiesData:type_name -> api.FreebiesData
	4,  // 5: api.UpdateFreebiesQuantityResponse.freebiesData:type_name -> api.FreebiesData
	4,  // 6: api.UpdateFreebiesStatusResponse.freebiesData:type_name -> api.FreebiesData
	2,  // 7: api.MoveTechAdminProtoService.SaveProduct:input_type -> api.SaveProductRequest
	5,  // 8: api.MoveTechAdminProtoService.SaveFreebies:input_type -> api.SaveFreebiesRequest
	7,  // 9: api.MoveTechAdminProtoService.GetAllFreebies:input_type -> api.GetAllFreebiesRequest
	9,  // 10: api.MoveTechAdminProtoService.GetAllFreebiesById:input_type -> api.GetAllFreebiesRequestById
	11, // 11: api.MoveTechAdminProtoService.UpdateFreebies:input_type -> api.UpdateFreebiesRequest
	13, // 12: api.MoveTechAdminProtoService.UpdateFreebiesQuantity:input_type -> api.UpdateFreebiesQuantityRequest
	15, // 13: api.MoveTechAdminProtoService.UpdateFreebiesStatus:input_type -> api.UpdateFreebiesStatusRequest
	3,  // 14: api.MoveTechAdminProtoService.SaveProduct:output_type -> api.SaveProductResponse
	6,  // 15: api.MoveTechAdminProtoService.SaveFreebies:output_type -> api.SaveFreebiesResponse
	8,  // 16: api.MoveTechAdminProtoService.GetAllFreebies:output_type -> api.GetAllFreebiesResponse
	10, // 17: api.MoveTechAdminProtoService.GetAllFreebiesById:output_type -> api.GetAllFreebiesResponseById
	12, // 18: api.MoveTechAdminProtoService.UpdateFreebies:output_type -> api.UpdateFreebiesResponse
	14, // 19: api.MoveTechAdminProtoService.UpdateFreebiesQuantity:output_type -> api.UpdateFreebiesQuantityResponse
	16, // 20: api.MoveTechAdminProtoService.UpdateFreebiesStatus:output_type -> api.UpdateFreebiesStatusResponse
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_pkg_pb_movetechdata_proto_init() }
func file_pkg_pb_movetechdata_proto_init() {
	if File_pkg_pb_movetechdata_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_pb_movetechdata_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_movetechdata_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_movetechdata_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_movetechdata_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreebiesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_movetechdata_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveFreebiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_movetechdata_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveFreebiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_movetechdata_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllFreebiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_movetechdata_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllFreebiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_movetechdata_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllFreebiesRequestById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_movetechdata_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllFreebiesResponseById); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_movetechdata_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFreebiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_movetechdata_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFreebiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_movetechdata_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFreebiesQuantityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_movetechdata_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFreebiesQuantityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_movetechdata_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFreebiesStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_movetechdata_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFreebiesStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_pb_movetechdata_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_pb_movetechdata_proto_goTypes,
		DependencyIndexes: file_pkg_pb_movetechdata_proto_depIdxs,
		EnumInfos:         file_pkg_pb_movetechdata_proto_enumTypes,
		MessageInfos:      file_pkg_pb_movetechdata_proto_msgTypes,
	}.Build()
	File_pkg_pb_movetechdata_proto = out.File
	file_pkg_pb_movetechdata_proto_rawDesc = nil
	file_pkg_pb_movetechdata_proto_goTypes = nil
	file_pkg_pb_movetechdata_proto_depIdxs = nil
}
